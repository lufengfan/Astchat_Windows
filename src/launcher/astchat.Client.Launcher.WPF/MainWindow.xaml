<Window x:Class="astchat.Client.Launcher.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:astchat.Client.Launcher.WPF"
        mc:Ignorable="d"
        Title="astchat" Height="600" Width="900" MinHeight="400" MinWidth="600"
        AllowsTransparency="True"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        SizeChanged="Window_SizeChanged">
    <Window.Resources>
        <system:Double x:Key="Window_Border_Thickness">5</system:Double>
        
        
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Normal">
                    <!-- 无边框窗体（正常窗口） -->
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Window}">
                                <Grid>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" RadiusX="{StaticResource Window_Border_Thickness}" RadiusY="{StaticResource Window_Border_Thickness}">
                                        <Rectangle.Margin>
                                            <Thickness Bottom="{StaticResource Window_Border_Thickness}" Left="{StaticResource Window_Border_Thickness}" Right="{StaticResource Window_Border_Thickness}" Top="{StaticResource Window_Border_Thickness}"/>
                                        </Rectangle.Margin>
                                        <Rectangle.Effect>
                                            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#FF898989"/>
                                        </Rectangle.Effect>
                                    </Rectangle>
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Margin}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Border.CornerRadius>
                                            <CornerRadius TopLeft="{StaticResource Window_Border_Thickness}" TopRight="{StaticResource Window_Border_Thickness}" BottomLeft="{StaticResource Window_Border_Thickness}" BottomRight="{StaticResource Window_Border_Thickness}"/>
                                        </Border.CornerRadius>
                                        <ContentPresenter />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="WindowState" Value="Maximized">
                    <!-- 无边框窗体（最大化窗口） -->
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <Grid>
        <!-- 此Grid用来规划窗口边界与内容 -->

        <!-- 规划边界元素开始 -->
        <Grid.Resources>
            <Style x:Key="Window_ResizeBorderRectangle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <EventSetter Event="UIElement.MouseLeftButtonDown" Handler="Window_ResizeBorder_MouseLeftButtonDown"/>
            </Style>

            <Style x:Key="Window_ResizeBorderRectangle_N+S" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Height" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeNS"/>
            </Style>
            <Style x:Key="Window_ResizeBorderRectangle_W+E" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Width" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeWE"/>
            </Style>
            <Style x:Key="Window_ResizeBorderRectangle_NW+SE" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Height" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Width" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeNWSE"/>
            </Style>
            <Style x:Key="Window_ResizeBorderRectangle_NE+SW" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Height" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Width" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeNESW"/>
            </Style>
        </Grid.Resources>

        <!-- 通过定义3×3的网格，将窗口边界与内容分离 -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- 该行规划上边界 -->
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <!-- 该行规划下边界 -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <!-- 该列规划左边界 -->
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <!-- 该列规划右边界 -->
        </Grid.ColumnDefinitions>

        <!-- 上边界元素，用作改变窗口高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_North" Grid.Row="0" Grid.Column="1"
			Style="{StaticResource Window_ResizeBorderRectangle_N+S}"/>

        <!-- 下边界元素，用作改变窗口高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_South" Grid.Row="2" Grid.Column="1"
			Style="{StaticResource Window_ResizeBorderRectangle_N+S}"/>

        <!-- 左边界元素，用作改变窗口宽度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_West" Grid.Row="1" Grid.Column="0"
			Style="{StaticResource Window_ResizeBorderRectangle_W+E}"/>

        <!-- 右边界元素，用作改变窗口宽度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_East" Grid.Row="1" Grid.Column="2"
			Style="{StaticResource Window_ResizeBorderRectangle_W+E}"/>

        <!-- 左上边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_NorthWest" Grid.Row="0" Grid.Column="0"
			Style="{StaticResource Window_ResizeBorderRectangle_NW+SE}"/>

        <!-- 右下边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_SouthEast" Grid.Row="2" Grid.Column="2"
			Style="{StaticResource Window_ResizeBorderRectangle_NW+SE}"/>

        <!-- 左下边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_NorthEast" Grid.Row="0" Grid.Column="2"
			Style="{StaticResource Window_ResizeBorderRectangle_NE+SW}"/>

        <!-- 右下边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_SouthWest" Grid.Row="2" Grid.Column="0"
			Style="{StaticResource Window_ResizeBorderRectangle_NE+SW}"/>
        <!-- 规划边界元素结束 -->

        <!-- 规划内容开始 -->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Width="50" Background="#FF333333"
                  MouseLeftButtonDown="Window_Title_MouseLeftButtonDown">

            </Grid>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" MinWidth="200" MaxWidth="400"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Background="#10000000">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Margin="15,15,15,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBox Name="txtChannel" Grid.Row="0"></TextBox>
                        <Button Name="btnConnnet" Grid.Column="2">＋</Button>
                    </Grid>

                    <StackPanel Grid.Row="1">
                        <Grid Background="#10000000">

                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#70000000"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <Grid Margin="15">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Image Height="35" Width="35" Source="SamLu.ico" Stretch="Fill"/>
                                <Grid Grid.Column="2" VerticalAlignment="Center">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="2"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0"  Text="lobby"/>
                                    <TextBlock Grid.Row="2" Foreground="Gray" Text="Hello World!"/>
                                </Grid>
                                <Label Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="Gray" Content="14:23"/>
                            </Grid>

                        </Grid>
                    </StackPanel>
                </Grid>

                <GridSplitter Grid.Column="0" Width="5" Background="Transparent" HorizontalAlignment="Right"></GridSplitter>

                <Grid Grid.Column="1" Background="#0D000000">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="200" MaxHeight="250"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        
                        <Label Grid.Column="0" 
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                               MouseLeftButtonDown="Window_Title_MouseLeftButtonDown">lobby</Label>

                        <Grid x:Name="Window_Title" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"></ColumnDefinition>
                                <ColumnDefinition Width="32"></ColumnDefinition>
                                <ColumnDefinition Width="32"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <SolidColorBrush x:Key="Activated_Window_Title_Botton_Foreground" Color="#FF4444FF"/>
                                <SolidColorBrush x:Key="Activated_Window_Title_Botton_Background" Color="#00000000"/>
                                <SolidColorBrush x:Key="Deactivated_Window_Title_Botton_Foreground" Color="#FF000000"/>
                                <SolidColorBrush x:Key="Deactivated_Window_Title_Botton_Background" Color="#00000000"/>
                                <SolidColorBrush x:Key="Pressed_Window_Title_Botton_Foreground" Color="#FF22227F"/>
                                <SolidColorBrush x:Key="Pressed_Window_Title_Botton_Background" Color="#FFBBBBBB"/>
                                <Style x:Key="Window_Title_Botton" TargetType="{x:Type Button}">
                                    <Setter Property="Margin" Value="0,0,0,10"/>
                                    <Style.Triggers>
                                        <!-- 鼠标悬停属性变化 -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource Activated_Window_Title_Botton_Foreground}"/>
                                            <Setter Property="Background" Value="{StaticResource Activated_Window_Title_Botton_Background}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border>
                                                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Foreground" Value="{StaticResource Deactivated_Window_Title_Botton_Foreground}"/>
                                            <Setter Property="Background" Value="{StaticResource Deactivated_Window_Title_Botton_Background}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border>
                                                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <!-- 鼠标按下属性变化 -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource Pressed_Window_Title_Botton_Foreground}"/>
                                            <Setter Property="Background" Value="{StaticResource Pressed_Window_Title_Botton_Background}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                                <!-- 正常化按钮图标 -->
                                <Canvas x:Key="Window_Title_Button_Maximize_NormalizeContent" Background="{Binding Background, ElementName=Window_Title_Button_Maximize}">
                                    <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="12,15 12,20 17,20 17,15" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="15,12 15,15" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="17,17 20,17 20,12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" X1="12" Y1="15" X2="17" Y2="15" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" X1="15" Y1="12" X2="20" Y2="12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                </Canvas>
                                <!-- 最大化按钮图标 -->
                                <Canvas x:Key="Window_Title_Button_Maximize_MaximizeContent" Background="{Binding Background, ElementName=Window_Title_Button_Maximize}">
                                    <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="12,12 12,20 20,20 20,12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" X1="12" Y1="12" X2="20" Y2="12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                </Canvas>
                            </Grid.Resources>

                            <Button x:Name="Window_Title_Button_Minimize" Grid.Column="0"
                                    Style="{StaticResource Window_Title_Botton}">
                                <Canvas Background="{Binding Background, ElementName=Window_Title_Button_Minimize}" Margin="0,0,0,0">
                                    <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Minimize}" X1="12" Y1="20" X2="20" Y2="20" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                </Canvas>
                            </Button>
                            <Button x:Name="Window_Title_Button_Maximize" Grid.Column="1"
                                    Style="{StaticResource Window_Title_Botton}" Content="{StaticResource Window_Title_Button_Maximize_MaximizeContent}"/>
                            <Button x:Name="Window_Title_Button_Close" Grid.Column="2"
                                    Style="{StaticResource Window_Title_Botton}">
                                <Canvas Background="{Binding Background, ElementName=Window_Title_Button_Close}">
                                    <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Close}" X1="12" Y1="12" X2="20" Y2="20" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Close}" X1="20" Y1="12" X2="12" Y2="20" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                </Canvas>
                            </Button>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="1">
                        <ScrollViewer>
                            <TextBlock x:Name="tbRecord" Padding="15,0" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto"></TextBlock>
                        </ScrollViewer>
                    </Grid>
                    
                    <GridSplitter Grid.Row="2" Height="2" HorizontalAlignment="Center" VerticalAlignment="Top"></GridSplitter>
                    
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
                            <Label Margin="2.5">: )</Label>
                            <Label Margin="2.5">@</Label>
                        </StackPanel>

                        <ScrollViewer Grid.Row="1">
                        <TextBox x:Name="txtMessage" Padding="15,0" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto"></TextBox>
                        </ScrollViewer>
                        
                        <Button x:Name="btnSend" Grid.Row="2" HorizontalAlignment="Right" Margin="15"  Padding="10,2.5">发送(S)</Button>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
