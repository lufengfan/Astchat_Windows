<Window x:Class="Astchat.Client.Launcher.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Astchat.Client.Launcher.WPF"
        mc:Ignorable="d"
        Title="Astchat" Height="600" Width="900"
        MinHeight="400" MinWidth="600"
        MaxHeight="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        SizeChanged="Window_SizeChanged">
    <Window.Resources>
        <system:Double x:Key="Window_Border_Thickness">5</system:Double>


    </Window.Resources>

    <Grid>
        <Grid.Effect>
            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#FF898989"></DropShadowEffect>
        </Grid.Effect>

        <!-- 此Grid用来规划窗口边界与内容 -->

        <!-- 规划边界元素开始 -->
        <Grid.Resources>
            <Style x:Key="Window_ResizeBorderRectangle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <EventSetter Event="UIElement.MouseLeftButtonDown" Handler="Window_ResizeBorder_MouseLeftButtonDown"/>
            </Style>

            <Style x:Key="Window_ResizeBorderRectangle_N+S" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Height" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeNS"/>
            </Style>
            <Style x:Key="Window_ResizeBorderRectangle_W+E" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Width" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeWE"/>
            </Style>
            <Style x:Key="Window_ResizeBorderRectangle_NW+SE" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Height" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Width" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeNWSE"/>
            </Style>
            <Style x:Key="Window_ResizeBorderRectangle_NE+SW" BasedOn="{StaticResource Window_ResizeBorderRectangle}" TargetType="{x:Type Rectangle}">
                <Setter Property="Height" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Width" Value="{StaticResource Window_Border_Thickness}"/>
                <Setter Property="Cursor" Value="SizeNESW"/>
            </Style>
        </Grid.Resources>

        <!-- 通过定义3×3的网格，将窗口边界与内容分离 -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- 该行规划上边界 -->
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <!-- 该行规划下边界 -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <!-- 该列规划左边界 -->
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <!-- 该列规划右边界 -->
        </Grid.ColumnDefinitions>

        <!-- 上边界元素，用作改变窗口高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_North" Grid.Row="0" Grid.Column="1"
			Style="{StaticResource Window_ResizeBorderRectangle_N+S}"/>

        <!-- 下边界元素，用作改变窗口高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_South" Grid.Row="2" Grid.Column="1"
			Style="{StaticResource Window_ResizeBorderRectangle_N+S}"/>

        <!-- 左边界元素，用作改变窗口宽度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_West" Grid.Row="1" Grid.Column="0"
			Style="{StaticResource Window_ResizeBorderRectangle_W+E}"/>

        <!-- 右边界元素，用作改变窗口宽度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_East" Grid.Row="1" Grid.Column="2"
			Style="{StaticResource Window_ResizeBorderRectangle_W+E}"/>

        <!-- 左上边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_NorthWest" Grid.Row="0" Grid.Column="0"
			Style="{StaticResource Window_ResizeBorderRectangle_NW+SE}"/>

        <!-- 右下边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_SouthEast" Grid.Row="2" Grid.Column="2"
			Style="{StaticResource Window_ResizeBorderRectangle_NW+SE}"/>

        <!-- 左下边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_NorthEast" Grid.Row="0" Grid.Column="2"
			Style="{StaticResource Window_ResizeBorderRectangle_NE+SW}"/>

        <!-- 右下边界元素，用作改变窗口宽度和高度 -->
        <Rectangle x:Name="Window_ResizeBorderRectangle_SouthWest" Grid.Row="2" Grid.Column="0"
			Style="{StaticResource Window_ResizeBorderRectangle_NE+SW}"/>

        <Border Grid.Row="1" Grid.Column="1"
                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <Border.CornerRadius>
                <CornerRadius TopLeft="{StaticResource Window_Border_Thickness}" TopRight="{StaticResource Window_Border_Thickness}" BottomLeft="{StaticResource Window_Border_Thickness}" BottomRight="{StaticResource Window_Border_Thickness}"></CornerRadius>
            </Border.CornerRadius>
            <!-- 规划边界元素结束 -->

            <!-- 规划内容开始 -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Width="50" Background="#FF333333"
                      MouseLeftButtonDown="Window_Title_MouseLeftButtonDown">
                    <Label
                        MouseDoubleClick="Window_Title_DoubleClick"
                        MouseMove="Window_Title_Move"></Label>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250" MinWidth="200" MaxWidth="400"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Background="#10000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Margin="15,15,15,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBox Name="txtChannel" Grid.Row="0" KeyUp="txtChannel_KeyUp" TextChanged="txtChannel_TextChanged"></TextBox>
                            <Button x:Name="btnAddChannel" Grid.Column="2" Click="btnAddChannel_Click" Width="24" Loaded="btnAddChannel_Loaded">
                                <Button.Resources>
                                    <Label x:Key="lblAddChannel">
                                        <Label.Background>
                                            <ImageBrush ImageSource="images/add_channel/add_channel.png"></ImageBrush>
                                        </Label.Background>
                                    </Label>
                                    <Label x:Key="lblAddChannel_Gray">
                                        <Label.Background>
                                            <ImageBrush ImageSource="images/add_channel/add_channel_gray.png"></ImageBrush>
                                        </Label.Background>
                                    </Label>
                                    <Label x:Key="lblAddChannel_DarkBlue">
                                        <Label.Background>
                                            <ImageBrush ImageSource="images/add_channel/add_channel_darkblue.png"></ImageBrush>
                                        </Label.Background>
                                    </Label>
                                    <Label x:Key="lblAddChannel_Unabled">
                                        <Label.Background>
                                            <ImageBrush ImageSource="images/add_channel/add_channel_unabled.png"></ImageBrush>
                                        </Label.Background>
                                    </Label>
                                </Button.Resources>
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <!-- 鼠标悬停属性变化 -->
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Content" Value="{StaticResource lblAddChannel}"></Setter>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border>
                                                                <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <!-- 鼠标按下属性变化 -->
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Content" Value="{StaticResource lblAddChannel_DarkBlue}"></Setter>
                                                    <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border>
                                                                <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border>
                                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>

                        <ScrollViewer x:Name="svChannelList" Grid.Row="1">
                            <StackPanel x:Name="spChannelList" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <!-- gChannel
                            <Grid x:Name="gChannel">

                                <Grid Margin="15">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Image x:Name="imgChannelIcon" Height="35" Width="35" Source="images/channel_default_icon.png" Stretch="Fill"/>
                                    <Grid Grid.Column="2" VerticalAlignment="Center">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="2"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <TextBlock x:Name="tbChannelName" Grid.Row="0"  Text="lobby"/>
                                        <TextBlock x:Name="tbLatestMessageContent" Grid.Row="2" Foreground="Gray" Text="Hello World!"/>
                                    </Grid>

                                    <Grid Grid.Column="3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>

                                        <Label x:Name="lblLatestMessageTime" Grid.Row="0" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="Gray" Content="14:23"/>
                                        <Border x:Name="brdrNewMessageBubble" Grid.Row="1"
                                            Background="Red" Margin="11,0" Padding="1"
                                            BorderBrush="Red" BorderThickness="1" CornerRadius="10">
                                            <TextBlock x:Name="tbNewMessageCount" Text="0" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                        </Border>
                                    </Grid>
                                </Grid>

                            </Grid>
                            -->
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>

                    <GridSplitter Grid.Column="0" Width="5" Background="Transparent" HorizontalAlignment="Right"></GridSplitter>

                    <Grid Grid.Column="1" Background="#0D000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="200" MaxHeight="250"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Label x:Name="lblWinTitle" Grid.Column="0" 
                                   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                   MouseLeftButtonDown="Window_Title_MouseLeftButtonDown"
                                   MouseDoubleClick="Window_Title_DoubleClick"
                                   MouseMove="Window_Title_Move">Astchat</Label>

                            <Grid x:Name="Window_Title" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32"></ColumnDefinition>
                                    <ColumnDefinition Width="32"></ColumnDefinition>
                                    <ColumnDefinition Width="32"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="Activated_Window_Title_Botton_Foreground" Color="#FF4444FF"/>
                                    <SolidColorBrush x:Key="Activated_Window_Title_Botton_Background" Color="#00000000"/>
                                    <SolidColorBrush x:Key="Deactivated_Window_Title_Botton_Foreground" Color="#FF000000"/>
                                    <SolidColorBrush x:Key="Deactivated_Window_Title_Botton_Background" Color="#00000000"/>
                                    <SolidColorBrush x:Key="Pressed_Window_Title_Botton_Foreground" Color="#FF22227F"/>
                                    <SolidColorBrush x:Key="Pressed_Window_Title_Botton_Background" Color="#FFBBBBBB"/>
                                    <Style x:Key="Window_Title_Botton" TargetType="{x:Type Button}">
                                        <Setter Property="Margin" Value="0,0,0,10"/>
                                        <Style.Triggers>
                                            <!-- 鼠标悬停属性变化 -->
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource Activated_Window_Title_Botton_Foreground}"/>
                                                <Setter Property="Background" Value="{StaticResource Activated_Window_Title_Botton_Background}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border>
                                                                <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource Deactivated_Window_Title_Botton_Foreground}"/>
                                                <Setter Property="Background" Value="{StaticResource Deactivated_Window_Title_Botton_Background}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border>
                                                                <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>

                                            <!-- 鼠标按下属性变化 -->
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource Pressed_Window_Title_Botton_Foreground}"/>
                                                <Setter Property="Background" Value="{StaticResource Pressed_Window_Title_Botton_Background}"/>
                                                
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                    <!-- 正常化按钮图标 -->
                                    <Canvas x:Key="Window_Title_Button_Maximize_NormalizeContent" Background="{Binding Background, ElementName=Window_Title_Button_Maximize}">
                                        <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="12,15 12,20 17,20 17,15" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                        <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="15,12 15,15" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                        <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="17,17 20,17 20,12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                        <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" X1="12" Y1="15" X2="17" Y2="15" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                        <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" X1="15" Y1="12" X2="20" Y2="12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    </Canvas>
                                    <!-- 最大化按钮图标 -->
                                    <Canvas x:Key="Window_Title_Button_Maximize_MaximizeContent" Background="{Binding Background, ElementName=Window_Title_Button_Maximize}">
                                        <Polyline Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" Points="12,12 12,20 20,20 20,12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                        <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Maximize}" X1="12" Y1="12" X2="20" Y2="12" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    </Canvas>
                                </Grid.Resources>

                                <Button x:Name="Window_Title_Button_Minimize" Grid.Column="0"
                                    Style="{StaticResource Window_Title_Botton}">
                                    <Canvas Background="{Binding Background, ElementName=Window_Title_Button_Minimize}" Margin="0,0,0,0">
                                        <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Minimize}" X1="12" Y1="20" X2="20" Y2="20" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    </Canvas>
                                </Button>
                                <Button x:Name="Window_Title_Button_Maximize" Grid.Column="1"
                                    Style="{StaticResource Window_Title_Botton}" Content="{StaticResource Window_Title_Button_Maximize_MaximizeContent}"/>
                                <Button x:Name="Window_Title_Button_Close" Grid.Column="2"
                                    Style="{StaticResource Window_Title_Botton}">
                                    <Canvas Background="{Binding Background, ElementName=Window_Title_Button_Close}">
                                        <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Close}" X1="12" Y1="12" X2="20" Y2="20" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                        <Line Stroke="{Binding Foreground, ElementName=Window_Title_Button_Close}" X1="20" Y1="12" X2="12" Y2="20" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    </Canvas>
                                </Button>
                            </Grid>
                        </Grid>
                        <Grid x:Name="gMessageRecord" Grid.Row="1">
                            <!-- svMessageRecord
                            <ScrollViewer x:Name="svMessageRecord" Visibility="Collapsed">
                                <TextBlock x:Name="tbRecord" Padding="15,0" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto"></TextBlock>
                            </ScrollViewer>
                            -->
                        </Grid>

                        <GridSplitter Grid.Row="2" Height="5" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>

                        <Grid x:Name="gMessage" Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
                                <Label x:Name="lblInsertEmoji"
                                   MouseLeftButtonUp="lblInsertEmoji_MouseLeftButtonUp"
                                   >
                                    <Image Height="20" Width="20" Source="images/add_emoji.png" Stretch="Fill"></Image>
                                </Label>
                                <Label x:Name="lblSendImage"
                                   MouseLeftButtonUp="lblSendImage_MouseLeftButtonUp">
                                    <Image Height="20" Width="20" Source="images/add_image.png" Stretch="Fill"></Image>
                                </Label>

                                <Popup x:Name="popupEmojiGallery" 
                                   Width="300" Height="150"
                                   AllowsTransparency="True"
                                   PopupAnimation="Fade"
                                   PlacementTarget="{Binding ElementName=lblInsertEmoji}"
                                   Placement="Top"
                                   StaysOpen="False"
                                   IsOpen="False">
                                    <Border BorderBrush="Gray" BorderThickness="1"
                                        Background="White">
                                        <Grid x:Name="gridEmojiGallery">
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>

                                        </Grid>
                                    </Border>
                                </Popup>
                                <Popup x:Name="popupSendImage" 
                                   Width="300" Height="50"
                                   AllowsTransparency="True"
                                   PopupAnimation="Fade"
                                   PlacementTarget="{Binding ElementName=lblSendImage}"
                                   Placement="Top"
                                   StaysOpen="False"
                                   IsOpen="False">
                                    <Border BorderBrush="Gray" BorderThickness="1"
                                        Background="White">
                                        <Grid x:Name="gridImageUrl"
                                          Loaded="gridImageUrl_Loaded">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Margin="5,5,0,5" Grid.Column="0" VerticalAlignment="Center" Text="请输入URL："></TextBlock>
                                            <TextBox Name="txtImageUrl" Padding="5" Margin="5" Grid.Column="1" VerticalAlignment="Center"></TextBox>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </StackPanel>

                            <!-- svMessage
                            <ScrollViewer x:Name="svMessage" Grid.Row="1" Visibility="Collapsed">
                                <TextBox x:Name="txtMessage" Padding="15,0" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" AcceptsTab="True"></TextBox>
                            </ScrollViewer>
                            -->

                            <Button x:Name="btnSend" Grid.Row="2" HorizontalAlignment="Right" Margin="15"  Padding="10,2.5">发送(S)</Button>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
